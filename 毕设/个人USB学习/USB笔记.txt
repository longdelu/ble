1. 描述符让USB主机知道一个设备的功能及行为（是鼠标还是键盘），描述符记录了设备的类型，厂商ID，产品ID，端点情况，版本号等众多信息。
	标准描述符分类：
		设备描述符，配置描述符，接口描述符，端点描述符字符串描述符
		特殊的描述符（类特殊描述符，HID描述符和音频接口描述符）
		层次结构：
		
		                 	           设备
			             配置                        配置
			          接口        接口         接口        接口
 （类特殊描述符） 端点  端点  端点  端点   端点  端点  端点  端点  （端点描述符定义了端点的大小，类型等）

2. 枚举过程
	枚举就是从设备读取各种描述符信息
3. 控制传输
	三个过程：建立过程    数据过程(可选)   状态过程
	建立过程
	   |
	   | SETUP令牌包
	   | DATA0数据包
	   |
	   \/
	数据过程（输入数据过程或者输出数据过程）（如果建立过程指定了数据长度为0，则没有数据过程）
	   |
	   |
	   |
	   |
	   \/
	状态过程（确认所有数据都已经传输完成）

4. 枚举过程

1. USB主机检测到USB设备插入
	设备复位
		主机向地址为0的端点0发送标准请求（建立过程）
			设备将设备描述符返回给主机（数据过程）
				主机确认收到数据无误，返回长度为0的确认数据包（状态过程）
	
2. 主机再一次对设备复位
	主机对地址0设备的端点0发送设置地址请求（建立过程）-- 新的地址在建立过程的数据包中
		设备等待主机请求状态返回（状态过程）
			主机请求状态返回（一个输入令牌包）
				设备返回0长度的状态数据包
					主机发送应答包ACK给设备
						设备收到ACK
							设备启用新的地址
3. 主机再次获取设备描述符（利用新地址，获取全部18字节设备描述符）
	（如果端点0最大包长小于18字节，主机会多次请求数据输入）

4. 主机获取配置描述符
	根据配置描述符(信息)获取配置集合（接口描述符，端点描述符，字符串描述符，特殊的描述符）

5. 特殊设备还要获取特殊描述符，像HID设备还有报告描述符

数据包结构：
	数据包被分成很多个域
	数据包共同点：同步域开始，紧跟着包标识符  PID，包结束符EOP结束
	                                           |
	                                           \/
	                                   用来标识一个包的类型（令牌包，数据包，握手包，特殊包）
	令牌包：用来启动一次USB传输（主机发送一个令牌通知哪个设备进行响应，如何响应）
	数据包
	握手包
	特殊包
	
6. 我们传输数据不是直接用包来传输的，要把包组织成事务才能传输数据
	事务组成： 令牌包  （启动一个事务）
	       	   数据包  （传送数据，方向由令牌包决定）
	           握手包  （表示数据传送状态或者设备状态）
	           
7. 四种传输类型
	批量传输            --	
	中断传输             |---每传输一次数据都是一个事务
	等时传输（同步传输）--
	控制传输   --------------建立过程和状体过程分别是一个事务，数据过程可能包括多个事务
	
8. 工作在什么模式下的端点叫做什么端点
	如：控制端点(端点0)，批量端点

9. 	
	
	
		           
	       

		                                   

	

	
									
								
					
				
				
			